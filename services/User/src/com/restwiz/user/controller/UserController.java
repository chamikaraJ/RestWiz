/**
 *This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.
 */
package com.restwiz.user.controller;

import com.restwiz.user.User;
import java.lang.String;
import java.lang.Integer;
import java.lang.Object;
import org.springframework.web.bind.annotation.*;
import org.springframework.http.MediaType;
import org.springframework.beans.factory.annotation.Autowired;
import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;
import com.wordnik.swagger.annotations.ApiParam;
import com.wavemaker.tools.api.core.annotations.WMAccessVisibility;
import com.wavemaker.tools.api.core.models.AccessSpecifier;

@RestController
@RequestMapping(value = "/user")
public class UserController {

    @Autowired
    private User user;

    @RequestMapping(value = "/deleteAppointmentByPatientNo", method = RequestMethod.DELETE)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public Integer deleteAppointmentByPatientNo(@RequestParam(value = "idno", required = false) String idno) {
        return user.deleteAppointmentByPatientNo(idno);
    }

    @RequestMapping(value = "/allSMS", produces = "application/json", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public Object getAllSMS(@RequestParam(value = "patientno", required = false) String patientno) {
        return user.getAllSMS(patientno);
    }

    @RequestMapping(value = "/patient", produces = "application/json", method = RequestMethod.POST)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public Object getPatient(@RequestBody String patientAuth) {
        return user.getPatient(patientAuth);
    }

    @RequestMapping(value = "/ptOperationStatus", produces = "application/json", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public Object getPtOperationStatus(@RequestParam(value = "patientno", required = false) String patientno) {
        return user.getPtOperationStatus(patientno);
    }

    @RequestMapping(value = "/refaralSrc", produces = "application/json", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public Object getRefaralSrc() {
        return user.getRefaralSrc();
    }

    @RequestMapping(value = "/signupDatByEmail", produces = "application/json", method = RequestMethod.POST)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public Object getSignupDatByEmail(@RequestBody String email) {
        return user.getSignupDatByEmail(email);
    }

    @RequestMapping(value = "/unreadMsgCountByPatientNo", produces = "application/json", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public Object getUnreadMsgCountByPatientNo(@RequestParam(value = "patientno", required = false) String patientno) {
        return user.getUnreadMsgCountByPatientNo(patientno);
    }

    @RequestMapping(value = "/patientData", produces = "application/json", method = RequestMethod.POST)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public Object patientData(@RequestBody String patientAuth) {
        return user.patientData(patientAuth);
    }

    @RequestMapping(value = "/password", produces = "application/json", method = RequestMethod.PUT)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public String updatePassword(@RequestBody String req) {
        return user.updatePassword(req);
    }
}
