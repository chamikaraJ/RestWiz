/*Copyright (c) 2015-2016 medicalwizard.com.au All Rights Reserved.
 This software is the confidential and proprietary information of medicalwizard.com.au You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with medicalwizard.com.au*/
package com.restwiz.clinicalobs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * PtAlert generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`ptAlert`")
public class PtAlert implements Serializable {

    private Integer idno;
    private String description;
    private Integer fkClinicalAlert;
    private Integer obsptid;
    private Obspatients obspatients;
    private Clinicalalerts clinicalalerts;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`idno`", nullable = false, scale = 0, precision = 10)
    public Integer getIdno() {
        return this.idno;
    }

    public void setIdno(Integer idno) {
        this.idno = idno;
    }

    @Column(name = "`Description`", nullable = true, length = 255)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "`fkClinicalAlert`", nullable = true, scale = 0, precision = 10)
    public Integer getFkClinicalAlert() {
        return this.fkClinicalAlert;
    }

    public void setFkClinicalAlert(Integer fkClinicalAlert) {
        this.fkClinicalAlert = fkClinicalAlert;
    }

    @Column(name = "`obsptid`", nullable = true, scale = 0, precision = 10)
    public Integer getObsptid() {
        return this.obsptid;
    }

    public void setObsptid(Integer obsptid) {
        this.obsptid = obsptid;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`obsptid`", referencedColumnName = "`obsptid`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_ptAlert_TO_obspatientQOnrj`"))
    @Fetch(FetchMode.JOIN)
    public Obspatients getObspatients() {
        return this.obspatients;
    }

    public void setObspatients(Obspatients obspatients) {
        if(obspatients != null) {
            this.obsptid = obspatients.getObsptid();
        }

        this.obspatients = obspatients;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fkClinicalAlert`", referencedColumnName = "`alert_id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_ptAlert_TO_clinicalalEnrAH`"))
    @Fetch(FetchMode.JOIN)
    public Clinicalalerts getClinicalalerts() {
        return this.clinicalalerts;
    }

    public void setClinicalalerts(Clinicalalerts clinicalalerts) {
        if(clinicalalerts != null) {
            this.fkClinicalAlert = clinicalalerts.getAlertId();
        }

        this.clinicalalerts = clinicalalerts;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof PtAlert)) return false;
        final PtAlert ptAlert = (PtAlert) o;
        return Objects.equals(getIdno(), ptAlert.getIdno());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdno());
    }
}