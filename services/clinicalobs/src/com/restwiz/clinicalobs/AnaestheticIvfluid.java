/*Copyright (c) 2015-2016 medicalwizard.com.au All Rights Reserved.
 This software is the confidential and proprietary information of medicalwizard.com.au You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with medicalwizard.com.au*/
package com.restwiz.clinicalobs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * AnaestheticIvfluid generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`anaestheticIVFluid`")
public class AnaestheticIvfluid implements Serializable {

    private Integer idno;
    private Integer fkAntRecId;
    private String fluidName;
    private Timestamp givenTime;
    private Integer fkObspatient;
    private AnaestheticRecord anaestheticRecord;
    private Obspatients obspatients;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`idno`", nullable = false, scale = 0, precision = 10)
    public Integer getIdno() {
        return this.idno;
    }

    public void setIdno(Integer idno) {
        this.idno = idno;
    }

    @Column(name = "`fkAntRecId`", nullable = true, scale = 0, precision = 10)
    public Integer getFkAntRecId() {
        return this.fkAntRecId;
    }

    public void setFkAntRecId(Integer fkAntRecId) {
        this.fkAntRecId = fkAntRecId;
    }

    @Column(name = "`fluidName`", nullable = true, length = 255)
    public String getFluidName() {
        return this.fluidName;
    }

    public void setFluidName(String fluidName) {
        this.fluidName = fluidName;
    }

    @Column(name = "`givenTime`", nullable = false)
    public Timestamp getGivenTime() {
        return this.givenTime;
    }

    public void setGivenTime(Timestamp givenTime) {
        this.givenTime = givenTime;
    }

    @Column(name = "`fkObspatient`", nullable = true, scale = 0, precision = 10)
    public Integer getFkObspatient() {
        return this.fkObspatient;
    }

    public void setFkObspatient(Integer fkObspatient) {
        this.fkObspatient = fkObspatient;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fkAntRecId`", referencedColumnName = "`idno`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_anaestheticIVFluid_TO3QDtZ`"))
    @Fetch(FetchMode.JOIN)
    public AnaestheticRecord getAnaestheticRecord() {
        return this.anaestheticRecord;
    }

    public void setAnaestheticRecord(AnaestheticRecord anaestheticRecord) {
        if(anaestheticRecord != null) {
            this.fkAntRecId = anaestheticRecord.getIdno();
        }

        this.anaestheticRecord = anaestheticRecord;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fkObspatient`", referencedColumnName = "`obsptid`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_anaestheticIVFluid_TObCXbC`"))
    @Fetch(FetchMode.JOIN)
    public Obspatients getObspatients() {
        return this.obspatients;
    }

    public void setObspatients(Obspatients obspatients) {
        if(obspatients != null) {
            this.fkObspatient = obspatients.getObsptid();
        }

        this.obspatients = obspatients;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof AnaestheticIvfluid)) return false;
        final AnaestheticIvfluid anaestheticIvfluid = (AnaestheticIvfluid) o;
        return Objects.equals(getIdno(), anaestheticIvfluid.getIdno());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdno());
    }
}