/*Copyright (c) 2015-2016 medicalwizard.com.au All Rights Reserved.
 This software is the confidential and proprietary information of medicalwizard.com.au You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with medicalwizard.com.au*/
package com.restwiz.clinicalobs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * QsubCategory generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`QSubCategory`")
public class QsubCategory implements Serializable {

    private Integer id;
    private Integer fkQcategory;
    private String subCategory;
    private Qcategory qcategory;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`fkQCategory`", nullable = true, scale = 0, precision = 10)
    public Integer getFkQcategory() {
        return this.fkQcategory;
    }

    public void setFkQcategory(Integer fkQcategory) {
        this.fkQcategory = fkQcategory;
    }

    @Column(name = "`subCategory`", nullable = true, length = 255)
    public String getSubCategory() {
        return this.subCategory;
    }

    public void setSubCategory(String subCategory) {
        this.subCategory = subCategory;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fkQCategory`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_QSubCategory_TO_Qcatem6CCd`"))
    @Fetch(FetchMode.JOIN)
    public Qcategory getQcategory() {
        return this.qcategory;
    }

    public void setQcategory(Qcategory qcategory) {
        if(qcategory != null) {
            this.fkQcategory = qcategory.getId();
        }

        this.qcategory = qcategory;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof QsubCategory)) return false;
        final QsubCategory qsubCategory = (QsubCategory) o;
        return Objects.equals(getId(), qsubCategory.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}