/*Copyright (c) 2015-2016 medicalwizard.com.au All Rights Reserved.
 This software is the confidential and proprietary information of medicalwizard.com.au You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with medicalwizard.com.au*/
package com.restwiz.clinicalobs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * DynamicMetaData generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`dynamicMetaData`")
public class DynamicMetaData implements Serializable {

    private Integer id;
    private String datafield;
    private String dataset;
    private String defaultvalue;
    private Boolean descriptionReq;
    private Boolean disabled;
    private String displayfield;
    private String displayname;
    private Integer fkQcategory;
    private Integer fkQsubCategory;
    private String hint;
    private String name;
    private String orderby;
    private String placeholder;
    private Boolean readonly;
    private Boolean required;
    private Boolean show;
    private String showCondition;
    private Integer tabindex;
    private String type;
    private String validationmessage;
    private String widget;
    private QsubCategory qsubCategory;
    private Qcategory qcategory;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`datafield`", nullable = true, length = 255)
    public String getDatafield() {
        return this.datafield;
    }

    public void setDatafield(String datafield) {
        this.datafield = datafield;
    }

    @Column(name = "`Dataset`", nullable = true, length = 255)
    public String getDataset() {
        return this.dataset;
    }

    public void setDataset(String dataset) {
        this.dataset = dataset;
    }

    @Column(name = "`defaultvalue`", nullable = true, length = 255)
    public String getDefaultvalue() {
        return this.defaultvalue;
    }

    public void setDefaultvalue(String defaultvalue) {
        this.defaultvalue = defaultvalue;
    }

    @Column(name = "`description_req`", nullable = true)
    public Boolean getDescriptionReq() {
        return this.descriptionReq;
    }

    public void setDescriptionReq(Boolean descriptionReq) {
        this.descriptionReq = descriptionReq;
    }

    @Column(name = "`disabled`", nullable = true)
    public Boolean getDisabled() {
        return this.disabled;
    }

    public void setDisabled(Boolean disabled) {
        this.disabled = disabled;
    }

    @Column(name = "`displayfield`", nullable = true, length = 255)
    public String getDisplayfield() {
        return this.displayfield;
    }

    public void setDisplayfield(String displayfield) {
        this.displayfield = displayfield;
    }

    @Column(name = "`displayname`", nullable = true, length = 255)
    public String getDisplayname() {
        return this.displayname;
    }

    public void setDisplayname(String displayname) {
        this.displayname = displayname;
    }

    @Column(name = "`fkQcategory`", nullable = true, scale = 0, precision = 10)
    public Integer getFkQcategory() {
        return this.fkQcategory;
    }

    public void setFkQcategory(Integer fkQcategory) {
        this.fkQcategory = fkQcategory;
    }

    @Column(name = "`fkQSubCategory`", nullable = true, scale = 0, precision = 10)
    public Integer getFkQsubCategory() {
        return this.fkQsubCategory;
    }

    public void setFkQsubCategory(Integer fkQsubCategory) {
        this.fkQsubCategory = fkQsubCategory;
    }

    @Column(name = "`hint`", nullable = true, length = 255)
    public String getHint() {
        return this.hint;
    }

    public void setHint(String hint) {
        this.hint = hint;
    }

    @Column(name = "`name`", nullable = true, length = 255)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "`orderby`", nullable = true, length = 255)
    public String getOrderby() {
        return this.orderby;
    }

    public void setOrderby(String orderby) {
        this.orderby = orderby;
    }

    @Column(name = "`placeholder`", nullable = true, length = 255)
    public String getPlaceholder() {
        return this.placeholder;
    }

    public void setPlaceholder(String placeholder) {
        this.placeholder = placeholder;
    }

    @Column(name = "`readonly`", nullable = true)
    public Boolean getReadonly() {
        return this.readonly;
    }

    public void setReadonly(Boolean readonly) {
        this.readonly = readonly;
    }

    @Column(name = "`required`", nullable = true)
    public Boolean getRequired() {
        return this.required;
    }

    public void setRequired(Boolean required) {
        this.required = required;
    }

    @Column(name = "`show`", nullable = true)
    public Boolean getShow() {
        return this.show;
    }

    public void setShow(Boolean show) {
        this.show = show;
    }

    @Column(name = "`showCondition`", nullable = true, length = 255)
    public String getShowCondition() {
        return this.showCondition;
    }

    public void setShowCondition(String showCondition) {
        this.showCondition = showCondition;
    }

    @Column(name = "`tabindex`", nullable = true, scale = 0, precision = 10)
    public Integer getTabindex() {
        return this.tabindex;
    }

    public void setTabindex(Integer tabindex) {
        this.tabindex = tabindex;
    }

    @Column(name = "`type`", nullable = true, length = 255)
    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    @Column(name = "`validationmessage`", nullable = true, length = 255)
    public String getValidationmessage() {
        return this.validationmessage;
    }

    public void setValidationmessage(String validationmessage) {
        this.validationmessage = validationmessage;
    }

    @Column(name = "`widget`", nullable = true, length = 255)
    public String getWidget() {
        return this.widget;
    }

    public void setWidget(String widget) {
        this.widget = widget;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fkQSubCategory`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_dynamicMetaData_TO_QS9ebG7`"))
    @Fetch(FetchMode.JOIN)
    public QsubCategory getQsubCategory() {
        return this.qsubCategory;
    }

    public void setQsubCategory(QsubCategory qsubCategory) {
        if(qsubCategory != null) {
            this.fkQsubCategory = qsubCategory.getId();
        }

        this.qsubCategory = qsubCategory;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fkQcategory`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_dynamicMetaData_TO_QcNnl2W`"))
    @Fetch(FetchMode.JOIN)
    public Qcategory getQcategory() {
        return this.qcategory;
    }

    public void setQcategory(Qcategory qcategory) {
        if(qcategory != null) {
            this.fkQcategory = qcategory.getId();
        }

        this.qcategory = qcategory;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DynamicMetaData)) return false;
        final DynamicMetaData dynamicMetaData = (DynamicMetaData) o;
        return Objects.equals(getId(), dynamicMetaData.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}