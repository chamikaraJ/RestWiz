/*Copyright (c) 2015-2016 medicalwizard.com.au All Rights Reserved.
 This software is the confidential and proprietary information of medicalwizard.com.au You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with medicalwizard.com.au*/
package com.restwiz.clinicalobs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * DynamicQandA generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`dynamicQandA`")
public class DynamicQandA implements Serializable {

    private Integer id;
    private String answer;
    private Integer fkQuestion;
    private Integer obsptid;
    private Obspatients obspatients;
    private DynamicMetaData dynamicMetaData;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`answer`", nullable = true, length = 255)
    public String getAnswer() {
        return this.answer;
    }

    public void setAnswer(String answer) {
        this.answer = answer;
    }

    @Column(name = "`fkQuestion`", nullable = true, scale = 0, precision = 10)
    public Integer getFkQuestion() {
        return this.fkQuestion;
    }

    public void setFkQuestion(Integer fkQuestion) {
        this.fkQuestion = fkQuestion;
    }

    @Column(name = "`obsptid`", nullable = true, scale = 0, precision = 10)
    public Integer getObsptid() {
        return this.obsptid;
    }

    public void setObsptid(Integer obsptid) {
        this.obsptid = obsptid;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`obsptid`", referencedColumnName = "`obsptid`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_dynamicQandA_TO_obspaN2kXn`"))
    @Fetch(FetchMode.JOIN)
    public Obspatients getObspatients() {
        return this.obspatients;
    }

    public void setObspatients(Obspatients obspatients) {
        if(obspatients != null) {
            this.obsptid = obspatients.getObsptid();
        }

        this.obspatients = obspatients;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fkQuestion`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_dynamicQandA_TO_dynamMDVr9`"))
    @Fetch(FetchMode.JOIN)
    public DynamicMetaData getDynamicMetaData() {
        return this.dynamicMetaData;
    }

    public void setDynamicMetaData(DynamicMetaData dynamicMetaData) {
        if(dynamicMetaData != null) {
            this.fkQuestion = dynamicMetaData.getId();
        }

        this.dynamicMetaData = dynamicMetaData;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DynamicQandA)) return false;
        final DynamicQandA dynamicQandA = (DynamicQandA) o;
        return Objects.equals(getId(), dynamicQandA.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}